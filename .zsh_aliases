alias uhh="history | grep"
alias vim=nvim
alias merged="git branch --merged dev | grep -v \"\* dev\""
alias merged!="merged | xargs -n 1 git branch -d"

function gitreview () {
  TARGET_BRANCH=$1 # branch PR is meing merged into
  SOURCE_BRANCH=$2 # branch being merged in
  
  echo "Creating review branch for merging $SOURCE_BRANCH into $TARGET_BRANCH"

  # checkout target branch
   git fetch
   git checkout $TARGET_BRANCH
   git pull --rebase

#    # create a "review" branch based on target branch
   git checkout -b review/$SOURCE_BRANCH


  # use --no-commit so changes made in the PR are shown as staged changes
  # making review process similar to a pre-check self review of your own code
  # You can add TODOs for things you want to follow up on, or are having trouble understanding!
  # You can follow references to code that was changed
  # You can workshop code changes you want to propose, and know that the change you want to propose would compile and/or WORK

  git merge --no-commit origin/$SOURCE_BRANCH
}
